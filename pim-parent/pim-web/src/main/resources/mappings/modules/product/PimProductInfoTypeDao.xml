<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinux.modules.product.dao.PimProductInfoTypeDao">
    
	<sql id="baseColumnList">
						a.product_id AS "productId",
				a.type_id AS "typeId"
	</sql>
	
	<sql id="insertColumnList">
						product_id,
				type_id
	</sql>
	
	
	<sql id="sql_of_where">
		where 1=1
				<if test="productId != null"> 
				AND a.product_id = #{productId}
				</if>
				<if test="typeId != null"> 
				AND a.type_id = #{typeId}
				</if>
	</sql>
	
	<sql id="sql_of_where_ext">
		<include refid="sql_of_where" />
		<if test="ids != null and ids.size > 0">
        	AND a.id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
            	#{id}
            </foreach>
        </if>
	</sql>
	
	<select id="select" parameterType="com.sinux.modules.product.entity.PimProductInfoType" resultType="com.sinux.modules.product.entity.PimProductInfoType" >
		SELECT 
			<include refid="baseColumnList"/>
		FROM pim_product_info_type a
		<include refid="sql_of_where" />
		<if test="page.orderBy != null and page.orderBy != ''">
			ORDER BY ${page.orderBy}
		</if>
	</select>
	
	
	<select id="selectByExt" parameterType="com.sinux.modules.product.entity.ext.PimProductInfoTypeExt" resultType="com.sinux.modules.product.entity.PimProductInfoType" >
		SELECT 
			<include refid="baseColumnList"/>
		FROM pim_product_info_type a
		<include refid="sql_of_where_ext" />
		<if test="page.orderBy != null and page.orderBy != ''">
			ORDER BY ${page.orderBy}
		</if>
	</select>
	
	<insert id="insert" parameterType="com.sinux.modules.product.entity.PimProductInfoType">
		INSERT INTO pim_product_info_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="productId != null">
					product_id,
				</if>
				<if test="typeId != null">
					type_id,
				</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
				<if test="productId != null">
			   		#{productId},
				</if>
				<if test="typeId != null">
			   		#{typeId},
				</if>
		</trim>
	</insert>
	
	<insert id="insertBatch"  parameterType="com.sinux.core.persistence.BatchEntity">
		insert into pim_product_info_type
		(
		<include refid="insertColumnList"/>
		)
		<if test="dbName == 'mysql'">
		values
		<if test="dataList != null and dataList.size > 0">
		<foreach collection="dataList" item="item" separator=",">
			(	
						<choose>  
							<when test="item.productId != null">#{item.productId}</when>
							<otherwise>null</otherwise>
						</choose>
						<choose>  
							<when test="item.typeId != null">,#{item.typeId}</when>
							<otherwise>,null</otherwise>
						</choose>
			)
		</foreach>
		</if>
		</if>
		<if test="dbName == 'oracle'">
			<if test="dataList != null and dataList.size > 0">
			<foreach collection="dataList" item="item" separator="union all">
				(select 
						<choose>  
							<when test="item.productId != null">#{item.productId}</when>
							<otherwise>null</otherwise>
						</choose>
						<choose>  
							<when test="item.typeId != null">,#{item.typeId}</when>
							<otherwise>,null</otherwise>
						</choose>
				FROM DUAL
				)
			</foreach>
			</if>
		</if>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.sinux.modules.product.entity.PimProductInfoType">
		update pim_product_info_type
		<set>
					<if test="productId != null" >
	             		product_id = #{productId},
	            	</if>
					<if test="typeId != null" >
	             		type_id = #{typeId},
	            	</if>
		</set>
		where 1=1
	</update>
	
	<update id="updateAllByPrimaryKey" parameterType="com.sinux.modules.product.entity.PimProductInfoType">
		update pim_product_info_type
		<set>
             		product_id = #{productId},
             		type_id = #{typeId},
		</set>
		where 1=1
	</update>
	
	<update id="updateBatchByPrimaryKey"  parameterType="com.sinux.core.persistence.BatchEntity">
		<if test="dbName == 'mysql'">
		<if test="dataList != null and dataList.size > 0">
		<foreach collection="dataList" item="item" index="index" open="" close="" separator=";">
			update pim_product_info_type
			<set>
						<if test="item.productId != null" >
	             			product_id = #{item.productId},
	            		</if>
						<if test="item.typeId != null" >
	             			type_id = #{item.typeId},
	            		</if>
			</set>
			where 1=1
		</foreach>
		</if>
		</if>
		<if test="dbName == 'oracle'">
		<if test="dataList != null and dataList.size > 0">
			<foreach collection="dataList" item="item" index="index" open="begin" close=";end;" separator=";">
			update pim_product_info_type
			<set>
						<if test="item.productId != null" >
	             			product_id = #{item.productId},
	            		</if>
						<if test="item.typeId != null" >
	             			type_id = #{item.typeId},
	            		</if>
			</set>
			where 1=1
		</foreach>
		</if>
		</if>
	</update>
	
	<update id="deleteByLogic" parameterType="com.sinux.modules.product.entity.PimProductInfoType">
		update pim_product_info_type set del_flag = '1' where 1=1
	</update>
	
	<update id="deleteBatchByLogic"  parameterType="com.sinux.core.persistence.BatchEntity">
		<if test="dbName == 'mysql'">
		<if test="dataList != null and dataList.size > 0">
		<foreach collection="dataList" item="item" index="index" open="" close="" separator=";">
			update pim_product_info_type set del_flag = '1' where 1=1
		</foreach>
		</if>
		</if>
		<if test="dbName == 'oracle'">
		<if test="dataList != null and dataList.size > 0">
			<foreach collection="dataList" item="item" index="index" open="begin" close=";end;" separator=";">
			update pim_product_info_type set del_flag = '1' where 1=1
		</foreach>
		</if>
		</if>
	</update>
	
	<delete id="deleteByPrimaryKey" parameterType="com.sinux.modules.product.entity.PimProductInfoType">
		delete from pim_product_info_type where 1=1
    </delete>
    
    <delete id="deleteBatchByPrimaryKey" parameterType="java.util.List">
		delete from pim_product_info_type where 
		<foreach collection="list" item="item" index="index" separator="or">
		(
		)
		</foreach>
    </delete>
	
</mapper>